package mavlink

import (
	"sync"
)

type Multicast struct {
	sync.Mutex
	listeners	map[chan []byte](chan bool)
}

func NewMulticast() Multicast {
	m := Multicast{
		listeners: make(map[chan []byte](chan bool)),
	}
	return m
}

func (m *Multicast) register(done chan bool) chan []byte {
	data := make(chan []byte)
	m.Lock()
	m.listeners[data] = done
	m.Unlock()
	return data
}

func (m *Multicast) notify(buffer []byte) {
	m.Lock()
	for k, _ := range m.listeners {
		k <- buffer
	}
	m.Unlock()
}

func (m *Multicast) clear(data chan []byte) {
	m.Lock()
	close(m.listeners[data])
	close(data)
	delete(m.listeners, data)
	m.Unlock()
}

