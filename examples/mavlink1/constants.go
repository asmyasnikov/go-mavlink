// Code generated by go-mavlink/mavgen
// DO NOT EDIT!

package mavlink

import (
	"errors"
)

// magicNumber constant for mavlink 1.0
const (
	magicNumber = 0xfe
)

// MessageID typedef
type MessageID uint8

// MAVLINK_PARSE_STATE typedef
type MAVLINK_PARSE_STATE int

// MAVLINK_PARSE_STATES
const (
	MAVLINK_PARSE_STATE_UNINIT           MAVLINK_PARSE_STATE = iota
	MAVLINK_PARSE_STATE_IDLE             MAVLINK_PARSE_STATE = iota
	MAVLINK_PARSE_STATE_GOT_STX          MAVLINK_PARSE_STATE = iota
	MAVLINK_PARSE_STATE_GOT_LENGTH       MAVLINK_PARSE_STATE = iota
	MAVLINK_PARSE_STATE_GOT_SEQ          MAVLINK_PARSE_STATE = iota
	MAVLINK_PARSE_STATE_GOT_SYSID        MAVLINK_PARSE_STATE = iota
	MAVLINK_PARSE_STATE_GOT_COMPID       MAVLINK_PARSE_STATE = iota
	MAVLINK_PARSE_STATE_GOT_MSGID1       MAVLINK_PARSE_STATE = iota
	MAVLINK_PARSE_STATE_GOT_PAYLOAD      MAVLINK_PARSE_STATE = iota
	MAVLINK_PARSE_STATE_GOT_CRC1         MAVLINK_PARSE_STATE = iota
	MAVLINK_PARSE_STATE_GOT_BAD_CRC      MAVLINK_PARSE_STATE = iota
	MAVLINK_PARSE_STATE_GOT_GOOD_MESSAGE MAVLINK_PARSE_STATE = iota
)

var (
	// ErrUnknownMsgID define
	ErrUnknownMsgID = errors.New("unknown msg id")
	// ErrCrcFail define
	ErrCrcFail = errors.New("checksum did not match")
	// ErrNoNewData define
	ErrNoNewData = errors.New("No new data")
	// currentSeqNum
	currentSeqNum uint8 = 0
	// dialects
	dialects DialectSlice = DialectSlice{DialectCommon}
)

func u16ToBytes(v uint16) []byte {
	return []byte{byte(v & 0xff), byte(v >> 8)}
}
